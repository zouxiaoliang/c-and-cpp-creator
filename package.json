{
	"name": "code-assistant",
	"displayName": "Code assistant",
	"description": "This is a Code assistant extension for vscode.",
	"version": "0.1.0",
	"publisher": "zouxiaoliang",
	"icon": "icon/logo.png",
	"repository": {
		"url": "https://github.com/zouxiaoliang/c-and-cpp-creator"
	},
	"engines": {
		"vscode": "^1.64.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:code_assistant.creator.helloWorld",
		"onCommand:code_assistant.creator.createSourceFile",
		"onCommand:code_assistant.creator.createHeaderFile",
		"onCommand:code_assistant.creator.createClass",
		"onCommand:code_assistant.creator.createMainForCpp",
		"onCommand:code_assistant.creator.createMainForC",
		"onCommand:code_assistant.creator.createProjectC",
		"onCommand:code_assistant.creator.createProjectCpp",
		"onCommand:code_assistant.creator.createProjectRust",
		"onCommand:code_assistant.creator.createPythonFile",
		"onCommand:code_assistant.creator.createRustFile",
		"onCommand:code_assistant.creator.createRustMod",
		"onCommand:code_assistant.creator.createShellFile",
		"onCommand:code_assistant.creator.createGoFile",
		"onCommand:code_assistant.creator.createCMakeFile",
		"onCommand:code_assistant.creator.createPuml"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "code_assistant.creator.helloWorld",
				"title": "Hello World",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createSourceFile",
				"title": "Create Source File",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createHeaderFile",
				"title": "Create Header File",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createClass",
				"title": "Create Class",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createMainForCpp",
				"title": "Create Cpp Main",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createMainForC",
				"title": "Create C Main",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createProjectCpp",
				"title": "Create Cpp Project",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createProjectC",
				"title": "Create C Project",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createPrcreateProjectRustojectC",
				"title": "Create Rust Project",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createPythonFile",
				"title": "Create Python File",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createRustFile",
				"title": "Create Rust File",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createShellFile",
				"title": "Create Shell File",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createGoFile",
				"title": "Create Go File",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createCMakeFile",
				"title": "Create CMake File",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createRustMod",
				"title": "Create Rust Mod",
				"category": "C&CPP Creator"
			},
			{
				"command": "code_assistant.creator.createPuml",
				"title": "Create PlantUML",
				"category": "C&CPP Creator"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"submenu": "code_assistant.creator.file",
					"group": "navigation"
				},
				{
					"command": "code_assistant.creator.createProjectCpp",
					"group": "navigation@100"
				}
			],
			"file/newFile": [
				{
					"command": "code_assistant.creator.createProjectC"
				},
				{
					"command": "code_assistant.creator.createProjectCpp"
				},
				{
					"command": "code_assistant.creator.createSourceFile"
				},
				{
					"command": "code_assistant.creator.createHeaderFile"
				},
				{
					"command": "code_assistant.creator.createClass"
				},
				{
					"command": "code_assistant.creator.createMainForCpp"
				},
				{
					"command": "code_assistant.creator.createMainForC"
				},
				{
					"command": "code_assistant.creator.createPythonFile"
				},
				{
					"command": "code_assistant.creator.createRustFile"
				},
				{
					"command": "code_assistant.creator.createShellFile"
				},
				{
					"command": "code_assistant.creator.createGoFile"
				},
				{
					"command": "code_assistant.creator.createCMakeFile"
				},
				{
					"command": "code_assistant.creator.createRustMod"
				},
				{
					"command": "code_assistant.creator.helloWorld"
				}
			],
			"code_assistant.creator.file": [
				{
					"command": "code_assistant.creator.createProjectC"
				},
				{
					"command": "code_assistant.creator.createProjectCpp"
				},
				{
					"command": "code_assistant.creator.createSourceFile"
				},
				{
					"command": "code_assistant.creator.createHeaderFile"
				},
				{
					"command": "code_assistant.creator.createClass"
				},
				{
					"command": "code_assistant.creator.createMainForCpp"
				},
				{
					"command": "code_assistant.creator.createMainForC"
				},
				{
					"command": "code_assistant.creator.createPythonFile"
				},
				{
					"command": "code_assistant.creator.createRustFile"
				},
				{
					"command": "code_assistant.creator.createShellFile"
				},
				{
					"command": "code_assistant.creator.createGoFile"
				},
				{
					"command": "code_assistant.creator.createCMakeFile"
				},
				{
					"command": "code_assistant.creator.createRustMod"
				},
				{
					"command": "code_assistant.creator.helloWorld"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "explorer",
				"contents": "You can also [open a CMake project folder](command:_java.project.open), or create a new CMake project by clicking the button below.\n[Create CMake C Project](command:code_assistant.creator.createProjectC)\n[Create CMake Cpp Project](command:code_assistant.creator.createProjectCpp)",
				"when": "workspaceFolderCount == 0"
			},
			{
				"view": "explorer",
				"contents": "You can also [open a Rust project folder](command:_java.project.open), or create a new Rust project by clicking the button below.\n[Create Rust Project](command:code_assistant.creator.createProjectRust)\n",
				"when": "workspaceFolderCount == 0"
			}
		],
		"submenus": [
			{
				"id": "code_assistant.creator.file",
				"label": "New C & C++ ..."
			}
		],
		"languages": [
			{
				"id": "cpp",
				"extensions": [
					".cpp",
					".hpp",
					".cc",
					".h"
				]
			},
			{
				"id": "python",
				"extensions": [
					".py"
				]
			},
			{
				"id": "rust",
				"extensions": [
					".rs"
				]
			}
		],
		"configuration": [
			{
				"title": "C&C++ Creator",
				"properties": {
					"code_assistant.creator.template.class.h": {
						"type": "string",
						"default": "",
						"description": "Class Header File Template Path."
					},
					"code_assistant.creator.template.class.cpp": {
						"type": "string",
						"default": "",
						"description": "Class Source File Template Path."
					},
					"code_assistant.creator.template.header": {
						"type": "string",
						"default": "",
						"description": "General Header File Template Path."
					},
					"code_assistant.creator.template.source": {
						"type": "string",
						"default": "",
						"description": "General Source File Template Path."
					},
					"code_assistant.creator.template.class.filename.header": {
						"type": "string",
						"default": "{{*CLASSNAME*}}.h",
						"description": "Class Header Filename Template, default: {{*CLASSNAME*}}.h."
					},
					"code_assistant.creator.template.class.filename.source": {
						"type": "string",
						"default": "{{*CLASSNAME*}}.cpp",
						"description": "Class Source Filename Template, default: {{*CLASSNAME*}}.cpp."
					},
					"code_assistant.creator.template.license": {
						"type": "string",
						"default": "",
						"description": "License Template Path."
					},
					"code_assistant.creator.template.username": {
						"type": "string",
						"default": "zouxiaoliang",
						"description": "Your Name."
					},
					"code_assistant.creator.template.main.c": {
						"type": "string",
						"default": "",
						"description": "General C Main File."
					},
					"code_assistant.creator.template.main.cpp": {
						"type": "string",
						"default": "",
						"description": "General CPP Main File."
					},
					"code_assistant.creator.template.c.cmakelists.txt": {
						"type": "string",
						"default": "",
						"description": "General CMake C Project File."
					},
					"code_assistant.creator.template.cpp.cmakelists.txt": {
						"type": "string",
						"default": "",
						"description": "General CMake CPP Project File."
					},
					"code_assistant.creator.template.main.py": {
						"type": "string",
						"default": "",
						"description": "General Python File."
					},
					"code_assistant.creator.template.main.rs": {
						"type": "string",
						"default": "",
						"description": "General Rust File."
					},
					"code_assistant.creator.default_project_path": {
						"type": "string",
						"default": "",
						"description": "Default Project Path"
					},
					"code_assistant.creator.template.main.sh": {
						"type": "string",
						"default": "",
						"description": "General Shell File."
					},
					"code_assistant.creator.template.main.go": {
						"type": "string",
						"default": "",
						"description": "General Go File."
					},
					"code_assistant.creator.template.main.cmakefile": {
						"type": "string",
						"default": "",
						"description": "General CMake File."
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.64.0",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.0",
		"@types/node": "14.x",
		"@typescript-eslint/eslint-plugin": "^5.12.1",
		"@typescript-eslint/parser": "^5.12.1",
		"eslint": "^8.9.0",
		"glob": "^7.2.0",
		"mocha": "^9.2.1",
		"typescript": "^4.5.5",
		"ts-loader": "^9.2.6",
		"webpack": "^5.69.1",
		"webpack-cli": "^4.9.2",
		"@vscode/test-electron": "^2.1.2"
	}
}
